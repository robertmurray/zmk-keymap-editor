/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <layouts/foostan/corne/5column.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/*                KEY POSITIONS

  ╭─────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4  | | 5   6   7   8   9  │
  │ 10  11  12  13  14  | | 15  16  17  18  19 │
  │ 20  21  22  23  24  │ │ 25  26  27  28  29 │
  ╰──────––╮30  31  32  │ │ 33  34  35 ╭───────╯
           ╰───────–---─╯ ╰──––––──────╯            */

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };
};

/ {
    combos {
        compatible = "zmk,combos";

        cut {
            bindings = <&kp LG( )>;
            key-positions = <20 21>;
            layers = <0>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <21 22>;
            layers = <0>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <22 23>;
            layers = <0>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <24 25>;
            layers = <0>;
        };

        vol_up {
            bindings = <&kp C_VOL_UP>;
            key-positions = <7 17>;
        };

        vol_down {
            bindings = <&kp C_VOL_DN>;
            key-positions = <17 27>;
        };

        mute {
            bindings = <&kp K_MUTE>;
            key-positions = <26 27>;
        };

        tilde {
            bindings = <&kp GRAVE>;
            key-positions = <1 2>;
            layers = <0>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <13>;
            flavor = "tap-preferred";
        };

        bht: bht {
            compatible = "zmk,behavior-hold-tap";
            label = "BHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        ABC {
            // -------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P   |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;   |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /   |
            //             | GUI | BACK | NUM |   | SYM | SPACE  | RET |

            bindings = <
  &bht N1 Q        &bht N2 W         &bht N3 E            &bht N4 R            &bht N5 T                  &bht N6 Y                 &bht N7 U             &bht N8 I        &bht N9 O       &bht N0 P
  &hml LSHIFT A    &hml LCTRL S      &hml LALT D          &hml LGUI F          &bht LEFT_BRACE G          &bht RIGHT_BRACE H        &hmr RGUI J           &hmr RALT K      &hmr RCTRL L    &hmr RSHIFT SEMI
  &bht CAPSLOCK Z  &bht LESS_THAN X  &bht GREATER_THAN C  &bht LEFT_BRACKET V  &bht LEFT_PARENTHESIS B    &bht RIGHT_PARENTHESIS N  &bht RIGHT_BRACKET M  &bht PLUS COMMA  &bht MINUS DOT  &bht EQUAL FSLH
                                     &kp LGUI             &kp BACKSPACE        &to 1                      &to 2                     &kp SPACE             &kp RETURN
            >;
        };

        NUM {
            // --------------------------------------------------------------------------
            // |  F1  |  F2  |  F3  |  F4  |  (  |   |  )  |  1  |  2  |  3  |     |
            // |  F5  |  F6  |  F7  |  F8  |  {  |   |  }  |  4  |  5  |  6  |     |
            // |  F9  |  F10 |  F11 |  F12 |  [  |   |  ]  |  7  |  8  |  9  |  0  |
            //               | GUI | SPC | ABC |   | SHIFT | ENT | ALT |

            bindings = <
  &kp N1  &kp N2  &kp N3    &kp N4         &kp N5    &kp N6     &kp N7          &kp N8        &kp N9           &kp N0
  &none   &none   &none     &none          &none     &none      &none           &kp UP_ARROW  &none            &trans
  &none   &none   &none     &none          &none     &none      &kp LEFT_ARROW  &kp DOWN      &kp RIGHT_ARROW  &none
                  &kp LGUI  &kp BACKSPACE  &to 0     &kp LSHFT  &kp SPACE       &kp RETURN
            >;
        };

        SYM {
            // -----------------------------------------------------------------------------------------
            // |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
            // |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
            // |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
            //         | GUI | SPC | letters | extras  |  | ENT | ALT |

            bindings = <
  &kp EXCL  &kp AT  &kp HASH  &kp DLLR       &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK   &none  &none
  &trans    &trans  &trans    &trans         &trans       &none      &none      &none       &none  &kp BSLH
  &trans    &trans  &trans    &trans         &trans       &kp UNDER  &none      &none       &none  &kp PIPE
                    &kp LGUI  &kp BACKSPACE  &to 0        &trans     &kp SPACE  &kp RETURN
            >;
        };
    };
};
